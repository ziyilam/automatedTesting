package executionEngine;

import java.lang.reflect.Method;
import java.util.ArrayList;

import org.apache.log4j.xml.DOMConfigurator;

import config.ActionKeywords;
import config.Constants;
import utility.ExcelUtils;
import utility.Log;

public class DriverScript {
	public static ActionKeywords actionKeywords;
	public static String sActionKeyword;
	public static String sObjectLocator;
	public static String sTestData;
	public static String sTestDataItem;
	public static String sTestStepID;
	public static String sTestCaseID;
	public static String sRunMode;
	public static String sCompareText;
	public static boolean bResult;
	public static Method method[];
	public static ArrayList<String> alCellHeader;
	public static int iTotalTestCases;
	public static int iCellHeaderIndex;
	public static int iStartTestData;
	public static int iLastTestData;
	public static int iCountTestData;
	public static int iStartTestStep;
	public static int iLastTestStep;
	public static int iCountTestStep;
	public static int iCountCol;

	public DriverScript() throws NoSuchMethodException, SecurityException {
		actionKeywords = new ActionKeywords();
		method = actionKeywords.getClass().getMethods();
		alCellHeader = new ArrayList<>();
	}

	public static void main(String[] args) throws Exception {

		/*
		 * String sPath = Constants.Path_TestData; ExcelUtils.setExcelFile(sPath,
		 * Constants.Sheet_TestSteps); for (int iRow = 1; iRow <= 6; iRow++) {
		 * sObjectLocator = ExcelUtils.getCellData(iRow, Constants.Col_ObjectLocator);
		 * sActionKeyword = ExcelUtils.getCellData(iRow, Constants.Col_ActionKeyword);
		 * sTestData = ExcelUtils.getCellData(iRow, Constants.Col_TestData);
		 * DriverScript driverScript = new DriverScript();
		 * driverScript.execute_Action(); // System.out.println(sObjectLocator); //
		 * System.out.println(sActionKeyword); // System.out.println(method[1]);
		 * 
		 * }
		 */
		ExcelUtils.setExcelFile(Constants.Path_TestData);
		DOMConfigurator.configure("log4j.xml");
		// DOMConfigurator.configure(Constants.Path_log4j);
		DriverScript startEngine = new DriverScript();
		startEngine.execute_TestCase();

	}

	private void execute_TestCase() throws Exception {
		iTotalTestCases = ExcelUtils.getRowCount(Constants.Sheet_TestCases);
		// int iTotalTestCases = iTotalTestCases1 - 1;
		Log.info("Total TestCases: " + iTotalTestCases);

		record_HeaderName();

		Log.info("---------------------------------------   START  ---------------------------------------");

		for (int iTestcase = 1; iTestcase <= iTotalTestCases; iTestcase++) {
			bResult = true;
			Log.info("TestCase no.: " + iTestcase);
			sTestCaseID = ExcelUtils.getCellData(iTestcase, Constants.Col_TestCaseID, Constants.Sheet_TestCases);
			Log.info("TestCaseID: " + sTestCaseID);
			sRunMode = ExcelUtils.getCellData(iTestcase, Constants.Col_RunMode, Constants.Sheet_TestCases);
			if (sRunMode.equals("yes")) {
				iStartTestStep = ExcelUtils.getRowStartWith(sTestCaseID, Constants.Col_TestCaseID,
						Constants.Sheet_TestSteps);
				Log.info("TestStep Start from row: " + iStartTestStep);
				iLastTestStep = ExcelUtils.getStepsCount(Constants.Sheet_TestSteps, sTestCaseID, iStartTestStep);
				Log.info("TestStep stop at row: " + iLastTestStep);
				Log.startTestCase(sTestCaseID);
				iStartTestData = ExcelUtils.getRowStartWith(sTestCaseID, Constants.Col_TestCaseID,
						Constants.Sheet_TestData);
				iLastTestData = ExcelUtils.getStepsCount(Constants.Sheet_TestData, sTestCaseID, iStartTestData);
				Log.info("TestData Start from row: " + iStartTestData);
				Log.info("TestData stop at row: " + iLastTestData);
				// iCountCol = ExcelUtils.getColCount(Constants.Sheet_TestData, 0);
				// Log.info("TestData sheet ColCount: " + iCountCol);
				// record_HeaderName();
				// int iIndex = alCellHeader.indexOf("username");
				// Log.info(iIndex);
				// String sHeader = ExcelUtils.getCellData(0, 1, Constants.Sheet_TestData);
				// Log.info(sHeader);
				// alCellHeader = new ArrayList<>();
				// alCellHeader.add(ExcelUtils.getCellData(0, 1, Constants.Sheet_TestData));
				// Log.info(alCellHeader);
				// String sHeader = ExcelUtils.getCellData(0, 2, Constants.Sheet_TestData);
				// Log.info("Header: "+sHeader);
				bResult = true;
				for (iCountTestData = iStartTestData; iCountTestData <= iLastTestData; iCountTestData++) {
					if (bResult == true) {
						for (iCountTestStep = iStartTestStep; iCountTestStep <= iLastTestStep; iCountTestStep++) {
							Log.info("testStep row no.: " + iCountTestStep);
							sObjectLocator = ExcelUtils.getCellData(iCountTestStep, Constants.Col_ObjectLocator,
									Constants.Sheet_TestSteps);
							sActionKeyword = ExcelUtils.getCellData(iCountTestStep, Constants.Col_ActionKeyword,
									Constants.Sheet_TestSteps);
							sTestStepID = ExcelUtils.getCellData(iCountTestStep, Constants.Col_TestStepID,
									Constants.Sheet_TestSteps);

							sTestData = ExcelUtils.getCellData(iCountTestStep, Constants.Col_TestData,
									Constants.Sheet_TestSteps);

							fetch_TestData(sTestData);

							execute_Action();
						}
					} else {
						ExcelUtils.setCellData(Constants.KEYWORD_FAIL, iTestcase, Constants.Col_CaseResults,
								Constants.Sheet_TestCases);
						Log.warn("Test Case Failed");
						actionKeywords.tryClose("", "", "");
						Log.info("close browser from TestCase loop");
						break;
					}

				}
			}
			if (bResult == true) {
				ExcelUtils.setCellData(Constants.KEYWORD_PASS, iTestcase, Constants.Col_CaseResults,
						Constants.Sheet_TestCases);
				Log.info("All TestStep Completed for " + sTestCaseID);
			} else {
				Log.info("RunMode is 'No' for: " + sTestCaseID);
			}
			Log.endTestCase(sTestCaseID);

		}
		Log.info("No more TestCase with 'Yes' RunMode");
		Log.info("---------------------------------------   E-N-D  ---------------------------------------");

	}

	private static void record_HeaderName() throws Exception {

		try {
			iCountCol = ExcelUtils.getColCount(Constants.Sheet_TestData, 0);
			Log.info("TestData sheet ColCount: " + iCountCol);
			for (int i = 0; i < iCountCol; i++) {

				alCellHeader.add(ExcelUtils.getCellData(0, i, Constants.Sheet_TestData));

			}
			Log.info("Header Name for TestData Sheet: " + alCellHeader);
		} catch (Exception e) {
			Log.error("DriverScript|record_HeaderName. Exception message: " + e.getMessage());
		}

	}

	private void fetch_TestData(String sTestData) throws Exception {
		try {
			switch (sTestData) {
			case "username":
				iCellHeaderIndex = alCellHeader.indexOf("username");
				sTestDataItem = ExcelUtils.getCellData(iCountTestData, iCellHeaderIndex, Constants.Sheet_TestData);
				Log.info("The Test Data Item: " + sTestDataItem);
				break;
			case "password":
				iCellHeaderIndex = alCellHeader.indexOf("password");
				sTestDataItem = ExcelUtils.getCellData(iCountTestData, iCellHeaderIndex, Constants.Sheet_TestData);
				Log.info("The Test Data Item: " + sTestDataItem);
				break;
			case "browser":
				iCellHeaderIndex = alCellHeader.indexOf("browser");
				sTestDataItem = ExcelUtils.getCellData(iCountTestData, iCellHeaderIndex, Constants.Sheet_TestData);
				Log.info("The Test Data Item: " + sTestDataItem);
				break;
			default:
				break;
			}
		} catch (Exception e) {
			Log.error("DriverScript|fetch_TestData. Exception message: " + e.getMessage());
		}
	}

	private static void execute_Action() throws Exception {

		try {
			for (int i = 0; i < method.length; i++) {
				// System.out.println(method[i]);
				if (method[i].getName().equals(sActionKeyword)) {
					method[i].invoke(actionKeywords, sObjectLocator, sActionKeyword, sTestDataItem);
					if (bResult == true) {
						Log.info("bResult: " + bResult + " for iStartTestStep: " + iCountTestStep);
						ExcelUtils.setCellData(Constants.KEYWORD_PASS, iCountTestStep, Constants.Col_StepResults,
								Constants.Sheet_TestSteps);

						// Log.info("iTestStep: " + iTestStepCount);
						break;
					} else {
						ExcelUtils.setCellData(Constants.KEYWORD_FAIL, iCountTestStep, Constants.Col_StepResults,
								Constants.Sheet_TestSteps);
						actionKeywords.tryClose("", "", "");
						Log.info("close browser from TestStep loop");
						break;
					}
				}
			}

		} catch (Exception e) {
			Log.error("DriverScript|execute_Action. Exception message: " + e.getMessage());
		}
		/*
		 * int a = ExcelUtils.getRowContains("Login", Constants.Col_TestCaseID,
		 * Constants.Sheet_TestSteps); System.out.println(a); int b =
		 * ExcelUtils.getTestStepsCount(Constants.Sheet_TestSteps, "Login", a);
		 * System.out.println(b);
		 */
		// System.out.println(method.length);
		/*
		 * System.out.println(sObjectLocator); System.out.println(sActionKeyword);
		 * System.out.println(sTestData);
		 * 
		 * int icount = ExcelUtils.getRowCount(Constants.Sheet_TestCases);
		 * System.out.println(icount); icount =
		 * ExcelUtils.getRowCount(Constants.Sheet_TestSteps);
		 * System.out.println(icount);
		 */
	}
}
